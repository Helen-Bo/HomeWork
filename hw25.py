import telebot
import requests
import time
import schedule
from bs4 import BeautifulSoup


token = '5214712668:AAHK2kjhCHEa__olavwm9KnThKpAAdY3UNo'
bot: telebot.TeleBot = telebot.TeleBot(token)


def get_text(url):
    response_horoscope = requests.get(url)
    soup = BeautifulSoup(response_horoscope.text, 'lxml')
    for prediction in soup.find('p', {'class': ""}):
        return prediction


def get_horoscope(message):
    zodiac_map = {'aries': '‚ôà', 'taurus': '‚ôâ', 'gemini': '‚ôä', 'cancer': '‚ôã', 'lion': '‚ôå', 'virgo': '‚ôç', 'libra': '‚ôé',
                  'scorpio': '‚ôè', 'sagittarius': '‚ôê', 'capricorn': '‚ôë', 'aquarius': '‚ôí', 'pisces': '‚ôì'}
    zodiac_sign = ['–û–≤–µ–Ω', '–¢–µ–ª–µ—Ü', '–ë–ª–∏–∑–Ω–µ—Ü—ã', '–†–∞–∫', '–õ–µ–≤', '–î–µ–≤–∞',
                   '–í–µ—Å—ã', '–°–∫–æ—Ä–ø–∏–æ–Ω', '–°—Ç—Ä–µ–ª–µ—Ü', '–ö–æ–∑–µ—Ä–æ–≥', '–í–æ–¥–æ–ª–µ–π', '–†—ã–±—ã']
    if message in zodiac_sign:
        if message == '–û–≤–µ–Ω':
            zodiac_icon = zodiac_map['aries']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/aries/today.html')
        elif message == '–¢–µ–ª–µ—Ü':
            zodiac_icon = zodiac_map['taurus']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/taurus/today.html')
        elif message == '–ë–ª–∏–∑–Ω–µ—Ü—ã':
            zodiac_icon = zodiac_map['gemini']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/gemini/today.html')
        elif message == '–†–∞–∫':
            zodiac_icon = zodiac_map['cancer']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/cancer/today.html')
        elif message == '–õ–µ–≤':
            zodiac_icon = zodiac_map['lion']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/lion/today.html')
        elif message == '–î–µ–≤–∞':
            zodiac_icon = zodiac_map['virgo']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/virgo/today.html')
        elif message == '–í–µ—Å—ã':
            zodiac_icon = zodiac_map['libra']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/libra/today.html')
        elif message == '–°–∫–æ—Ä–ø–∏–æ–Ω':
            zodiac_icon = zodiac_map['scorpio']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/scorpio/today.html')
        elif message == '–°—Ç—Ä–µ–ª–µ—Ü':
            zodiac_icon = zodiac_map['sagittarius']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/sagittarius/today.html')
        elif message == '–ö–æ–∑–µ—Ä–æ–≥':
            zodiac_icon = zodiac_map['capricorn']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/capricorn/today.html')
        elif message == '–í–æ–¥–æ–ª–µ–π':
            zodiac_icon = zodiac_map['aquarius']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/aquarius/today.html')
        elif message == '–†—ã–±—ã':
            zodiac_icon = zodiac_map['pisces']
            prediction = get_text('https://orakul.com/horoscope/astrologic/general/pisces/today.html')
        your_prediction = f''' –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≥–æ–ª–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ {message}:
        {zodiac_icon}
    {prediction}'''
        return your_prediction
    else:
        return '–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –∫–∏—Ä–∏–ª–∏—Ü–µ–π.\n–ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∑–∞–≥–ª–∞–≤–Ω–∞—è, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–æ—Ä—á–Ω—ã–µ.\n'


# def run_schedules():
#     schedule.every().day.at('08:00').do(any_message)
#     schedule.every(10).seconds.do(any_message)
#     while True:
#         schedule.run_pending()
#         time.sleep(1)


@bot.message_handler(commands=['start'])
def start_message(message):
    print(message)
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç {message.chat.first_name} üîÆ")
    time.sleep(1)
    bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞')


@bot.message_handler(regexp='.*')
def any_message(message):
    bot.send_message(message.chat.id, get_horoscope(message.text))


bot.infinity_polling()
